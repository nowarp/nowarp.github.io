"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[4875],{9689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=n(4848),a=n(8453);const r={},s="InheritedStateMutation",c={id:"detectors/InheritedStateMutation",title:"InheritedStateMutation",description:"Severity Best Practices",source:"@site/docs/detectors/InheritedStateMutation.md",sourceDirName:"detectors",slug:"/detectors/InheritedStateMutation",permalink:"/tools/misti/docs/next/detectors/InheritedStateMutation",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/docs/detectors/InheritedStateMutation.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"ImplicitOpcode",permalink:"/tools/misti/docs/next/detectors/ImplicitOpcode"},next:{title:"NeverAccessedVariables",permalink:"/tools/misti/docs/next/detectors/NeverAccessedVariables"}},o={},d=[{value:"Why is it bad?",id:"why-is-it-bad",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"inheritedstatemutation",children:"InheritedStateMutation"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Severity"}),": Low | ",(0,i.jsx)(t.strong,{children:"Category"}),": Best Practices"]}),"\n",(0,i.jsx)(t.p,{children:"An optional detector that highlights all instances where inherited trait variables\nare directly modified."}),"\n",(0,i.jsx)(t.h2,{id:"why-is-it-bad",children:"Why is it bad?"}),"\n",(0,i.jsxs)(t.p,{children:["Traits should provide setter methods to ensure that invariants related to their\nstate are preserved. Directly modifying trait variables (e.g., ",(0,i.jsx)(t.code,{children:"self.traitVar = 42"}),")\ncan violate these invariants, leading to potential bugs or security vulnerabilities.\nThis detector warns when such direct modifications occur, prompting further review\nby auditors."]}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tact",children:"trait T {\n  balance: Int;\n}\n\ncontract C with T {\n  balance: Int = 42;\n  fun updateBalance() {\n    self.balance = 100; // Suspicious: Highlighted by the detector\n  }\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"Use instead:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tact",children:'trait T {\n  balance: Int;\n  fun setBalance(newBalance: Int) {\n    require(newBalance > 0, "balance cannot be negative"); // Invariant check\n    self.balance = newBalance;\n  }\n}\n\ncontract C with T {\n  balance: Int = 42;\n  fun updateBalance() {\n    self.setBalance(100); // OK: Invariant preserved\n  }\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var i=n(6540);const a={},r=i.createContext(a);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);