"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[7614],{4792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=n(4848),a=n(8453);const i={},o="ArgCopyMutation",r={id:"detectors/ArgCopyMutation",title:"ArgCopyMutation",description:"A detector that highlights cases where function argument mutations are ineffective",source:"@site/versioned_docs/version-0.7/detectors/ArgCopyMutation.md",sourceDirName:"detectors",slug:"/detectors/ArgCopyMutation",permalink:"/tools/misti/docs/0.7/detectors/ArgCopyMutation",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/versioned_docs/version-0.7/detectors/ArgCopyMutation.md",tags:[],version:"0.7",frontMatter:{},sidebar:"sidebar",previous:{title:"Overview",permalink:"/tools/misti/docs/0.7/detectors"},next:{title:"AsmIsUsed",permalink:"/tools/misti/docs/0.7/detectors/AsmIsUsed"}},c={},l=[{value:"Why is it bad?",id:"why-is-it-bad",level:2},{value:"Example",id:"example",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"argcopymutation",children:"ArgCopyMutation"}),"\n",(0,s.jsxs)(t.p,{children:["A detector that highlights cases where function argument mutations are ineffective\ndue to ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_value",children:"call-by-value semantics"})," in Tact."]}),"\n",(0,s.jsx)(t.h2,{id:"why-is-it-bad",children:"Why is it bad?"}),"\n",(0,s.jsx)(t.p,{children:"In Tact, function arguments are passed by value, meaning that any mutations applied\nto these arguments will only affect the local copy of the variable within the function.\nSuch mutations are unobservable outside the function, except for potentially\nincreasing gas consumption or causing exceptions."}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tact",children:"fun addEntry(m: map<Int,Int>) {\n  m.set(1, 10); // Bad: Mutating the copy\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"Use instead:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tact",children:"fun addEntry() {\n  self.m.set(1, 10); // OK: Changing contract's state\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"Alternatively, you could redesign the method:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tact",children:"fun generateNewValue(): Int {\n  // ... produce new value for the map\n  return self.nextValue + 1;\n}\n\nm.set(self.nextKey, self.generateNewValue()); // OK\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(6540);const a={},i=s.createContext(a);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);