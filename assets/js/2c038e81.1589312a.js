"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[7393],{3268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=n(4848),r=n(8453);const s={},a="UnboundMap",i={id:"detectors/UnboundMap",title:"UnboundMap",description:"Severity Security",source:"@site/docs/detectors/UnboundMap.md",sourceDirName:"detectors",slug:"/detectors/UnboundMap",permalink:"/tools/misti/docs/next/detectors/UnboundMap",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/docs/detectors/UnboundMap.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"UnboundLoop",permalink:"/tools/misti/docs/next/detectors/UnboundLoop"},next:{title:"UnprotectedCall",permalink:"/tools/misti/docs/next/detectors/UnprotectedCall"}},c={},d=[{value:"Why is it bad?",id:"why-is-it-bad",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"unboundmap",children:"UnboundMap"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Severity"}),": Low | ",(0,o.jsx)(t.strong,{children:"Category"}),": Security"]}),"\n",(0,o.jsxs)(t.p,{children:["An optional detector that highlights cases where a map field allows inserting\nvalues (e.g., via ",(0,o.jsx)(t.code,{children:".set"}),") but lacks functionality for removing entries (e.g., via ",(0,o.jsx)(t.code,{children:".del"}),")."]}),"\n",(0,o.jsx)(t.h2,{id:"why-is-it-bad",children:"Why is it bad?"}),"\n",(0,o.jsx)(t.p,{children:"A map without a method to remove elements can lead to storage overflow, particularly\nin long-term contract usage. Failing to provide a way to clear or delete entries\ncan result in uncontrolled storage growth, which not only wastes resources but\nmay also increase the cost of contract execution and maintenance over time."}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tact",children:"contract Test {\n    map: Map<Int, String>;\n\n    setEntry(key: Int, value: String) {\n        self.map.set(key, value); // Bad\n    }\n}\n"})}),"\n",(0,o.jsx)(t.p,{children:"Use instead:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tact",children:"contract Test {\n    map: Map<Int, String>;\n\n    setEntry(key: Int, value: String) {\n        self.map.set(key, value);\n    }\n\n    delEntry(key: Int) {\n        self.map.del(key); // Fixed: Added a new API method\n    }\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(6540);const r={},s=o.createContext(r);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);