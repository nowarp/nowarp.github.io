"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[2866],{8301:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var o=t(4848),s=t(8453);const a={},r="UnboundMap",i={id:"detectors/UnboundMap",title:"UnboundMap",description:"An optional detector that highlights cases where a map field allows inserting",source:"@site/versioned_docs/version-0.7/detectors/UnboundMap.md",sourceDirName:"detectors",slug:"/detectors/UnboundMap",permalink:"/tools/misti/docs/0.7/detectors/UnboundMap",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/versioned_docs/version-0.7/detectors/UnboundMap.md",tags:[],version:"0.7",frontMatter:{},sidebar:"sidebar",previous:{title:"UnboundLoop",permalink:"/tools/misti/docs/0.7/detectors/UnboundLoop"},next:{title:"UnprotectedCall",permalink:"/tools/misti/docs/0.7/detectors/UnprotectedCall"}},c={},d=[{value:"Why is it bad?",id:"why-is-it-bad",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"unboundmap",children:"UnboundMap"}),"\n",(0,o.jsxs)(n.p,{children:["An optional detector that highlights cases where a map field allows inserting\nvalues (e.g., via ",(0,o.jsx)(n.code,{children:".set"}),") but lacks functionality for removing entries (e.g., via ",(0,o.jsx)(n.code,{children:".del"}),")."]}),"\n",(0,o.jsx)(n.h2,{id:"why-is-it-bad",children:"Why is it bad?"}),"\n",(0,o.jsx)(n.p,{children:"A map without a method to remove elements can lead to storage overflow, particularly\nin long-term contract usage. Failing to provide a way to clear or delete entries\ncan result in uncontrolled storage growth, which not only wastes resources but\nmay also increase the cost of contract execution and maintenance over time."}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tact",children:"contract Test {\n    map: Map<Int, String>;\n\n    setEntry(key: Int, value: String) {\n        self.map.set(key, value); // Bad\n    }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Use instead:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tact",children:"contract Test {\n    map: Map<Int, String>;\n\n    setEntry(key: Int, value: String) {\n        self.map.set(key, value);\n    }\n\n    delEntry(key: Int) {\n        self.map.del(key); // Fixed: Added a new API method\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(6540);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);