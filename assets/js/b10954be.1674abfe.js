"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[4193],{4186:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var n=t(4848),r=t(8453);const o={},i="ZeroAddress",d={id:"detectors/ZeroAddress",title:"ZeroAddress",description:"Severity Security",source:"@site/versioned_docs/version-0.9/detectors/ZeroAddress.md",sourceDirName:"detectors",slug:"/detectors/ZeroAddress",permalink:"/tools/misti/docs/detectors/ZeroAddress",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/versioned_docs/version-0.9/detectors/ZeroAddress.md",tags:[],version:"0.9",frontMatter:{},sidebar:"sidebar",previous:{title:"UnusedOptional",permalink:"/tools/misti/docs/detectors/UnusedOptional"},next:{title:"Overview",permalink:"/tools/misti/docs/tools"}},a={},c=[{value:"Why is it bad?",id:"why-is-it-bad",level:2},{value:"Example",id:"example",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"zeroaddress",children:"ZeroAddress"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Severity"}),": Low | ",(0,n.jsx)(s.strong,{children:"Category"}),": Security"]}),"\n",(0,n.jsx)(s.p,{children:"A detector that identifies uses of the zero address."}),"\n",(0,n.jsx)(s.h2,{id:"why-is-it-bad",children:"Why is it bad?"}),"\n",(0,n.jsx)(s.p,{children:"Using the zero address in smart contracts is typically problematic because it can be\nexploited as a default or uninitialized address, leading to unintended transfers and\nsecurity vulnerabilities. Additionally, operations involving the zero address can\nresult in loss of funds or tokens, as there is no private key to access this address."}),"\n",(0,n.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tact",children:"contract Proxy {\n  to: Address;\n  init() {\n    // Warning: Insecure usage of zero address as default value\n    self.to = newAddress(0, 0);\n  }\n  fun setAddress(to: Address) {\n    self.to = to\n  }\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"Use instead:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tact",children:"contract Proxy {\n  to: Address;\n  init(to: Address) {\n    // Fixed: Using the input value on initialization.\n    self.to = to;\n  }\n  fun setAddress(to: Address) {\n    self.to = to\n  }\n}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>d});var n=t(6540);const r={},o=n.createContext(r);function i(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);