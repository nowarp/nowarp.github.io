"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[5780],{326:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=t(4848),r=t(8453);const o={},a="EnsurePrgSeed",s={id:"detectors/EnsurePrgSeed",title:"EnsurePrgSeed",description:"A detector that identifies all calls to nativeRandom and nativeRandomInterval",source:"@site/versioned_docs/version-0.7/detectors/EnsurePrgSeed.md",sourceDirName:"detectors",slug:"/detectors/EnsurePrgSeed",permalink:"/tools/misti/docs/0.7/detectors/EnsurePrgSeed",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/versioned_docs/version-0.7/detectors/EnsurePrgSeed.md",tags:[],version:"0.7",frontMatter:{},sidebar:"sidebar",previous:{title:"DuplicatedCondition",permalink:"/tools/misti/docs/0.7/detectors/DuplicatedCondition"},next:{title:"EtaLikeSimplifications",permalink:"/tools/misti/docs/0.7/detectors/EtaLikeSimplifications"}},d={},c=[{value:"Why is it bad?",id:"why-is-it-bad",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"ensureprgseed",children:"EnsurePrgSeed"}),"\n",(0,i.jsxs)(n.p,{children:["A detector that identifies all calls to ",(0,i.jsx)(n.code,{children:"nativeRandom"})," and ",(0,i.jsx)(n.code,{children:"nativeRandomInterval"}),"\nwithout a preceding PRG seed initialization."]}),"\n",(0,i.jsx)(n.h2,{id:"why-is-it-bad",children:"Why is it bad?"}),"\n",(0,i.jsxs)(n.p,{children:["Using ",(0,i.jsx)(n.code,{children:"nativeRandom"})," or ",(0,i.jsx)(n.code,{children:"nativeRandomInterval"})," without first initializing the PRG seed via\n",(0,i.jsx)(n.code,{children:"nativePrepareRandom"}),", ",(0,i.jsx)(n.code,{children:"nativeRandomize"}),", or ",(0,i.jsx)(n.code,{children:"nativeRandomizeLt"})," may lead to unintended behavior\nor weak random number generation. This detector ensures that PRG seed initialization\nis always performed before any use of random functions, enhancing contract security."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tact",children:"// Bad: `nativeRandom` is used without prior PRG seed initialization\nfun generateRandomValue(): Int {\n  return nativeRandom()\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Use instead:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tact",children:"fun test(): Int {\n  nativePrepareRandom();\n}\n\n// OK: PRG has been initialized somewhere in the contract\nfun generateRandomValue(): Int {\n  return nativeRandom()\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(6540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);