"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[877],{4297:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var s=n(4848),r=n(8453);const o={},d="ConstantAddress",i={id:"detectors/ConstantAddress",title:"ConstantAddress",description:"Severity Security",source:"@site/docs/detectors/ConstantAddress.md",sourceDirName:"detectors",slug:"/detectors/ConstantAddress",permalink:"/tools/misti/docs/next/detectors/ConstantAddress",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/docs/detectors/ConstantAddress.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"CellBounds",permalink:"/tools/misti/docs/next/detectors/CellBounds"},next:{title:"DivideBeforeMultiply",permalink:"/tools/misti/docs/next/detectors/DivideBeforeMultiply"}},a={},c=[{value:"Why is it bad?",id:"why-is-it-bad",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"constantaddress",children:"ConstantAddress"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Severity"}),": Info | ",(0,s.jsx)(t.strong,{children:"Category"}),": Security"]}),"\n",(0,s.jsx)(t.p,{children:"An optional detector that highlights all the constant addresses appearing in the source code."}),"\n",(0,s.jsx)(t.h2,{id:"why-is-it-bad",children:"Why is it bad?"}),"\n",(0,s.jsxs)(t.p,{children:["Using hardcoded addresses can sometimes indicate poor contract design.\nSome constant addresses may need to be set dynamically, e.g., using\n",(0,s.jsx)(t.code,{children:"contractAddress"}),", or at least have a way to change them at runtime, for\nexample, when upgrading a contract."]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tact",children:'contract Main {\n  proxy: Address;\n  init() {\n    // Bad: Constant address highlighted by the analyzer.\n    self.proxy = address("UQBKgXCNLPexWhs2L79kiARR1phGH1LwXxRbNsCFF9doczSI");\n  }\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Use instead:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tact",children:"contract Main {\n  proxy: Address;\n  init() {\n   let proxy: Proxy = initOf Proxy(myAddress());\n    // OK: Address depends on how the proxy contact has been deployed\n    self.proxy = contractAddress(proxy);\n  }\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var s=n(6540);const r={},o=s.createContext(r);function d(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);