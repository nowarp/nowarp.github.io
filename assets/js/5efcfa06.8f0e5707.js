"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[7581],{2457:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(4848),r=n(8453);const a={},i="DumpCallGraph",s={id:"tools/DumpCallGraph",title:"DumpCallGraph",description:"Misti provides a feature to dump the Call Graph (CG) in JSON, DOT, and Mermaid formats. This is essential for understanding the function call relationships within your Tact contracts and analyzing the flow of function calls.",source:"@site/versioned_docs/version-0.8/tools/DumpCallGraph.md",sourceDirName:"tools",slug:"/tools/DumpCallGraph",permalink:"/tools/misti/docs/0.8/tools/DumpCallGraph",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/versioned_docs/version-0.8/tools/DumpCallGraph.md",tags:[],version:"0.8",frontMatter:{},sidebar:"sidebar",previous:{title:"DumpAst",permalink:"/tools/misti/docs/0.8/tools/DumpAst"},next:{title:"DumpCfg",permalink:"/tools/misti/docs/0.8/tools/DumpCfg"}},l={},c=[{value:"Usage",id:"usage",level:2},{value:"Further Information",id:"further-information",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"dumpcallgraph",children:"DumpCallGraph"}),"\n",(0,o.jsxs)(t.p,{children:["Misti provides a feature to dump the ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Call_graph",children:"Call Graph (CG)"})," in JSON, DOT, and Mermaid formats. This is essential for understanding the function call relationships within your Tact contracts and analyzing the flow of function calls."]}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.p,{children:"To dump the CG in Mermaid format, use the following command:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'misti -t "DumpCallGraph:format=mmd" <TACT_CONFIG_PATH|TACT_FILE_PATH> > callgraph.mmd\n'})}),"\n",(0,o.jsx)(t.p,{children:"To dump the CG in Graphviz DOT format, use the following command:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'misti -t "DumpCallGraph:format=dot" <TACT_CONFIG_PATH|TACT_FILE_PATH> > callgraph.dot\n'})}),"\n",(0,o.jsx)(t.p,{children:"To dump the CG in JSON format, use the following command:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'misti -t "DumpCallGraph:format=json" <TACT_CONFIG_PATH|TACT_FILE_PATH> > callgraph.json\n'})}),"\n",(0,o.jsx)(t.h2,{id:"further-information",children:"Further Information"}),"\n",(0,o.jsxs)(t.p,{children:["For detailed instructions on how to work with the generated Mermaid, Graphviz DOT, and JSON files\u2014including how to view, convert, and visualize them\u2014please refer to the ",(0,o.jsx)(t.a,{href:"/tools/misti/docs/0.8/tools/DumpCfg#working-with-graphviz",children:"DumpCfg documentation"}),". The steps and tools used for ",(0,o.jsx)(t.code,{children:"DumpCallGraph"})," outputs are the same as those described for ",(0,o.jsx)(t.code,{children:"DumpCfg"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["By utilizing the ",(0,o.jsx)(t.code,{children:"DumpCallGraph"})," tool, developers can gain deeper insights into the function call structure of their contracts and effectively debug and enhance their code."]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Note:"})," Replace ",(0,o.jsx)(t.code,{children:"<TACT_CONFIG_PATH|TACT_FILE_PATH>"})," with the actual path to your Tact configuration file or Tact contract file when running the commands."]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(6540);const r={},a=o.createContext(r);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);